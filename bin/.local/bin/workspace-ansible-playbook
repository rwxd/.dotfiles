#!/usr/bin/env bash
"exec" "$HOME/.dotfiles/.venv/bin/python3" "$0" "$@"

from pathlib import Path
import yaml
import json
import re
from subprocess import check_output

CWD = Path().cwd()
CURRENT_DIR_NAME = CWD.name
REGEX_SCM_TO_NAME = re.compile(r'([^\/]+$)')
ROLES_PATH = Path.home().joinpath('dev/ansible-roles/')
VSCODE_WORKSPACES_PATH = Path.home().joinpath('dev/vscode-workspaces/')
VSCODE_WORKSPACE_FILE_PATH = VSCODE_WORKSPACES_PATH.joinpath(
    f'{CURRENT_DIR_NAME}.code-workspace'
)

workspace = {
    'folders': [{'name': CURRENT_DIR_NAME, 'path': str(CWD)}],
    'settings': {
        '[yaml]': {'editor.defaultFormatter': 'tomaciazek.ansible'},
        '[yml]': {'editor.defaultFormatter': 'tomaciazek.ansible'},
        'terminal.integrated.env.linux': {'ANSIBLE_ROLES_PATH': str(ROLES_PATH),},
        'ansible.python.activationScript': str(CWD.joinpath('.venv/bin/activate'))
    },
}

ansible_requirements = []
for path in CWD.glob('**/requirements.y*ml'):
    with open(path, 'r') as requirement:
        ansible_requirements.append(yaml.safe_load(requirement))

for requirement in ansible_requirements:
    if 'roles' in requirement:
        for role in [role for role in requirement['roles'] if 'scm' in role]:
            match = REGEX_SCM_TO_NAME.search(role['scm'].replace('.git', ''))
            if match:
                name = match.group(0)
                path = ROLES_PATH.joinpath(name)
                workspace['folders'].append({'name': name, 'path': str(path)})

                if not path.exists():
                    path.mkdir(parents=True, exist_ok=True)
                    check_output(('git', '-C', str(path), 'clone', role['scm'], '.'))

VSCODE_WORKSPACES_PATH.mkdir(parents=True, exist_ok=True)
with open(VSCODE_WORKSPACE_FILE_PATH, 'w+') as file:
    json.dump(workspace, file, indent=2)
