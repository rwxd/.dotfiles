#!/usr/bin/env bash
# fuzzy search directories to open with tmux
# if a session is already present it just switches to it
# supports tmuxp workspaces

SEARCH_PATH="$HOME/"
TMUX_WORKSPACES_PATH="$HOME/dev/tmux-workspaces/"
IGNORE_LIST=("$HOME/.tmux/*" "$HOME/.vscode/*" "$HOME/.vim/*" "$HOME/.oh-my-zsh/*" "$HOME/.cache/*" "*/\.venv/*" "$HOME/.cargo/*" "$HOME/.cookiecutters/*" "*/\.git/*" "*/\.terraform/*" "*/\.cache/*" "*/\.vim/*" "*/\.oh-my-zsh/*")

ignore=()
for i in "${IGNORE_LIST[@]}"; do
	ignore+=("!" "-path" "$i")
done

if [[ $# -eq 1 ]]; then
	selected="$1"
else
	files=$(
		find "$SEARCH_PATH" -mindepth 1 -maxdepth 5 -name '.git' -type d "${ignore[@]}" 2>/dev/null | sed 's/\.git//g' &&
			find "$TMUX_WORKSPACES_PATH" -mindepth 1 -maxdepth 1 -name "*.tmux-workspace.yml" -type f "${ignore[@]}" 2>/dev/null
	)
	selected=$(fzf-tmux -p 85% --reverse --preview 'glow -s dark {}/README.md 2> /dev/null || echo "No README.md found ðŸ˜ž"' <<<"${files[@]}" | sort -u)
fi

if [[ -z "$selected" ]]; then
	exit 0
fi

# tmux workspace
if [[ $selected == *".tmux-workspace.yml"* ]]; then
	DISABLE_AUTO_TITLE='true' tmuxp load -y "$selected"
	exit 0
fi

selected_name=$(basename "$selected" | tr . _)
tmux_running=$(pgrep tmux)

# new session, tmux is not running
if [[ -z "$TMUX" ]] && [[ -z "$tmux_running" ]]; then
	tmux new-session -s "$selected_name" -c "$selected"
	exit 0
fi

# new session and switch
if ! tmux has-session -t="$selected_name" 2>/dev/null; then
	tmux new-session -ds "$selected_name" -c "$selected"
fi

# switch or attach to existing session
if [[ -z "$TMUX" ]]; then
	tmux attach-session -t "$selected_name"
else
	tmux switch-client -t "$selected_name"
fi
